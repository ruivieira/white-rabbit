name: ci
on:
  push:
    branches: [main]
  pull_request:
permissions: read-all
jobs:
  deno:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.4.3
      - name: Remove lockfile if exists
        run: rm -f deno.lock
      - name: Check formatting
        run: deno fmt --check
      - name: Check linting
        run: deno lint
      - name: Check types
        run: deno check src/**/*.ts tests/**/*.ts
      - name: Run tests
        run: deno test -A tests/
      - name: Run tests with coverage
        run: deno test -A --coverage=coverage tests/
      - name: Generate coverage report
        run: deno coverage coverage --lcov --output=coverage.lcov
      - name: Test server startup
        run: |
          # Start server in background
          deno run -A src/server.ts &
          SERVER_PID=$!

          # Wait for server to start
          sleep 2

          # Test health endpoint
          curl -f http://localhost:8000/health

          # Test chat completions endpoint
          curl -f -X POST http://localhost:8000/v1/chat/completions \
            -H "Content-Type: application/json" \
            -d '{"model":"test","messages":[{"role":"user","content":"test"}],"max_tokens":10}'

          # Test completions endpoint
          curl -f -X POST http://localhost:8000/v1/completions \
            -H "Content-Type: application/json" \
            -d '{"model":"test","prompt":"test","max_tokens":10}'

          # Clean up
          kill $SERVER_PID
